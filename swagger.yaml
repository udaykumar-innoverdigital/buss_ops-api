openapi: 3.0.0
info:
  title: Resource Management API
  description: API for managing employee allocations, projects, and clients.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /bizops/card:
    get:
      summary: Get BizOps card data
      description: Fetch counts of total employees, unallocated employees, draft employees, and in-progress projects.
      responses:
        '200':
          description: Successfully retrieved BizOps card data
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalEmployees:
                    type: integer
                  unallocatedEmployees:
                    type: integer
                  draftEmployees:
                    type: integer
                  activeProjects:
                    type: integer
        '500':
          description: Internal Server Error

  /master-allocations:
    get:
      summary: Get master allocations data
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved master allocations data
          content:
            application/json:
              schema:
                type: object
                properties:
                  masterAllocations:
                    type: array
                    items:
                      type: object
        '500':
          description: Internal Server Error

  /employees/search:
    get:
      summary: Search employees by name or ID
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
            description: Search term for employee name or ID
      responses:
        '200':
          description: Successfully searched employees
          content:
            application/json:
              schema:
                type: object
                properties:
                  employees:
                    type: array
                    items:
                      type: object
                      properties:
                        EmployeeId:
                          type: integer
                        EmployeeName:
                          type: string
        '400':
          description: Query parameter is required
        '500':
          description: Internal Server Error

  /project-allocate/form/data:
    get:
      summary: Get employee allocation data within a date range
      parameters:
        - in: query
          name: employeeName
          schema:
            type: string
          description: Employee name
        - in: query
          name: employeeId
          schema:
            type: string
          description: Employee ID
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for allocation
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for allocation
      responses:
        '200':
          description: Successfully fetched allocation data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid input data
        '404':
          description: Employee not found
        '500':
          description: Internal Server Error

  /modal/data:
    get:
      summary: Get data for modal forms
      description: Fetch clients, projects, employees, and timesheet approvers.
      responses:
        '200':
          description: Successfully retrieved modal form data
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error

  /employee-allocations/{employeeId}:
    get:
      summary: Get employee allocation percentage
      parameters:
        - in: path
          name: employeeId
          required: true
          schema:
            type: integer
            description: Employee ID
      responses:
        '200':
          description: Successfully retrieved allocation percentage
          content:
            application/json:
              schema:
                type: object
                properties:
                  remainingAllocation:
                    type: integer
        '500':
          description: Internal Server Error

  /allocations/{allocationId}:
    put:
      summary: Update an allocation
      parameters:
        - in: path
          name: allocationId
          required: true
          schema:
            type: integer
            description: Allocation ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successfully updated allocation
        '400':
          description: Invalid input or allocation overlap
        '500':
          description: Internal Server Error

  /allocations/{allocationId}:
    delete:
      summary: Delete an allocation
      parameters:
        - in: path
          name: allocationId
          required: true
          schema:
            type: integer
            description: Allocation ID
      responses:
        '200':
          description: Successfully deleted allocation
        '404':
          description: Allocation not found
        '500':
          description: Internal Server Error

components:
  schemas:
    Allocation:
      type: object
      properties:
        AllocationID:
          type: integer
        EmployeeID:
          type: integer
        AllocationStatus:
          type: string
        AllocationPercent:
          type: number
